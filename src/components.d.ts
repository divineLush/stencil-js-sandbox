/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface FancySideDrawer {
        "open": boolean;
        "openSideDrawer": () => Promise<void>;
        "title": string;
    }
    interface FancyTooltip {
        "text": string;
    }
}
declare global {
    interface HTMLFancySideDrawerElement extends Components.FancySideDrawer, HTMLStencilElement {
    }
    var HTMLFancySideDrawerElement: {
        prototype: HTMLFancySideDrawerElement;
        new (): HTMLFancySideDrawerElement;
    };
    interface HTMLFancyTooltipElement extends Components.FancyTooltip, HTMLStencilElement {
    }
    var HTMLFancyTooltipElement: {
        prototype: HTMLFancyTooltipElement;
        new (): HTMLFancyTooltipElement;
    };
    interface HTMLElementTagNameMap {
        "fancy-side-drawer": HTMLFancySideDrawerElement;
        "fancy-tooltip": HTMLFancyTooltipElement;
    }
}
declare namespace LocalJSX {
    interface FancySideDrawer {
        "open"?: boolean;
        "title"?: string;
    }
    interface FancyTooltip {
        "text"?: string;
    }
    interface IntrinsicElements {
        "fancy-side-drawer": FancySideDrawer;
        "fancy-tooltip": FancyTooltip;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "fancy-side-drawer": LocalJSX.FancySideDrawer & JSXBase.HTMLAttributes<HTMLFancySideDrawerElement>;
            "fancy-tooltip": LocalJSX.FancyTooltip & JSXBase.HTMLAttributes<HTMLFancyTooltipElement>;
        }
    }
}
